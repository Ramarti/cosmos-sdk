syntax = "proto3";
package cosmos.staking.v1beta1;

option go_package = "github.com/cosmos/cosmos-sdk/x/staking/types";

import "gogoproto/gogo.proto";
import "cosmos/staking/v1beta1/staking.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";
import "google/protobuf/duration.proto";

// GenesisState defines the staking module's genesis state.
message GenesisState {
  // params defines all the parameters of related to deposit.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // last_total_power tracks the total amounts of bonded tokens recorded during
  // the previous end block.
  bytes last_total_power = 2 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];

  // last_validator_powers is a special index that provides a historical list
  // of the last-block's bonded validators.
  repeated LastValidatorPower last_validator_powers = 3 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // validators defines the validator set at genesis.
  repeated Validator validators = 4 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // delegations defines the delegations active at genesis.
  repeated Delegation delegations = 5 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // unbonding_delegations defines the unbonding delegations active at genesis.
  repeated UnbondingDelegation unbonding_delegations = 6 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // redelegations defines the redelegations active at genesis.
  repeated Redelegation redelegations = 7 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // exported defines a bool to identify whether the chain dealing with exported or initialized genesis.
  bool exported = 8;

  // periods defines the supported staking periods.
  Periods periods = 9 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// LastValidatorPower required for validator set update logic.
message LastValidatorPower {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // address is the address of the validator.
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // power defines the power of the validator.
  int64 power = 2;
}

// Enum to represent different Staking Period types.
enum PeriodType {
  PERIOD_TYPE_FLIEXIBLE   = 0;
  PERIOD_TYPE_THREE_MONTH = 1;
  PERIOD_TYPE_ONE_YEAR    = 2;
}

// Message representing the Period
message Period {
  // type defines the type of the staking period.
  PeriodType type = 1; // Enum for period type
  // duration defines, if staked, the min time for the delegation.
  google.protobuf.Duration duration = 2
      [(gogoproto.nullable) = false, (amino.dont_omitempty) = true, (gogoproto.stdduration) = true];
  // rewards_multiplier defines the rewards multiplier for the staking period.
  string rewards_multiplier = 3 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
}

message Periods {
  map<int32, Period> period_map = 1;
}
